{"ast":null,"code":"import { profileAPI, usersAPI } from \"../API/api\";\nconst ADD_POST = 'ADD-POST';\nconst CURRENT_POST_VALUE = 'CURRENT-POST-VALUE';\nconst SET_PROFILE_USERS = 'SET-PROFILE-USERS';\nconst SET_USER_STATUS = 'SET-USER-STATUS';\nconst InitializeState = {\n  postsArr: [{\n    title: 'Что значит работать удаленно?',\n    text: 'Удалённая рабо́та или работа на дому — форма занятости, при которой работодатель и наёмный работник находятся на значительном расстоянии друг от друга, передавая и получая техническое задание, результаты труда и оплату при помощи современных средств связи.',\n    photo: '/images/online.jpg'\n  }, {\n    title: 'Что значит работать фрилансером ?',\n    text: 'Фрила́нсер — свободный работник. Термин фрилансер обычно приписывается Вальтеру Скотту используется в романе «Айвенго» для описания средневекового наёмного воина, букв. «вольного копейщика», но употреблялся и ранее, по крайней мере, с самого начала XIX века.',\n    photo: '/images/freelancer.jpg'\n  }],\n  currentPost: {\n    title: '',\n    text: '',\n    url: ''\n  },\n  profile: null,\n  status: null\n};\n\nconst postCreatReducer = (state = InitializeState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        postsArr: [...state.postsArr, {\n          title: action.arr[0],\n          text: action.arr[1],\n          url: action.arr[2]\n        }],\n        currentPost: {\n          title: '',\n          text: '',\n          url: ''\n        }\n      };\n\n    case SET_PROFILE_USERS:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_USER_STATUS:\n      debugger;\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = arr => ({\n  type: ADD_POST,\n  arr\n});\nexport const setUsersProfile = profile => ({\n  type: SET_PROFILE_USERS,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const getProfile = userId => {\n  return dispatch => {\n    usersAPI.getProfile(userId).then(data => {\n      dispatch(setUsersProfile(data));\n    }).catch(rej => {\n      console.log(rej);\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(data => {\n      dispatch(setUserStatus(data));\n      console.log(data);\n    }).catch(rej => {\n      console.log(rej);\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(data => {\n      dispatch(setUserStatus(data));\n    }).catch(rej => {\n      console.log(rej);\n    });\n  };\n};\nexport default postCreatReducer;","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/Redux/postCreatReducer.js"],"names":["profileAPI","usersAPI","ADD_POST","CURRENT_POST_VALUE","SET_PROFILE_USERS","SET_USER_STATUS","InitializeState","postsArr","title","text","photo","currentPost","url","profile","status","postCreatReducer","state","action","type","arr","addPost","setUsersProfile","setUserStatus","getProfile","userId","dispatch","then","data","catch","rej","console","log","getStatus","updateStatus"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst CURRENT_POST_VALUE = 'CURRENT-POST-VALUE'\r\nconst SET_PROFILE_USERS = 'SET-PROFILE-USERS'\r\nconst SET_USER_STATUS = 'SET-USER-STATUS'\r\n\r\nconst  InitializeState = {\r\n    postsArr: [\r\n        {\r\n        title: 'Что значит работать удаленно?',\r\n        text: 'Удалённая рабо́та или работа на дому — форма занятости, при которой работодатель и наёмный работник находятся на значительном расстоянии друг от друга, передавая и получая техническое задание, результаты труда и оплату при помощи современных средств связи.',\r\n        photo: '/images/online.jpg',\r\n    },\r\n\r\n        {\r\n            title: 'Что значит работать фрилансером ?',\r\n            text: 'Фрила́нсер — свободный работник. Термин фрилансер обычно приписывается Вальтеру Скотту используется в романе «Айвенго» для описания средневекового наёмного воина, букв. «вольного копейщика», но употреблялся и ранее, по крайней мере, с самого начала XIX века.',\r\n            photo: '/images/freelancer.jpg',\r\n        }],\r\n    currentPost: {\r\n            title:'',\r\n            text:'',\r\n            url:''\r\n    },\r\n    profile:null,\r\n    status:null\r\n}\r\nconst postCreatReducer = (state=InitializeState,action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsArr: [\r\n                    ...state.postsArr,\r\n                    {\r\n                    title: action.arr[0],\r\n                    text:action.arr[1],\r\n                    url:action.arr[2]\r\n                }],\r\n                currentPost: {\r\n                    title: '',\r\n                    text: '',\r\n                    url: ''\r\n                }\r\n            }\r\n        case SET_PROFILE_USERS:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (arr) => ({type:ADD_POST,arr})\r\nexport const setUsersProfile = (profile) => ({type:SET_PROFILE_USERS,profile})\r\nexport const setUserStatus = (status) =>({type:SET_USER_STATUS,status})\r\n\r\nexport const getProfile = (userId) =>{\r\n    return (dispatch) =>{\r\n        usersAPI.getProfile(userId).then(data => {\r\n            dispatch(setUsersProfile(data))\r\n        }).catch(rej =>{\r\n            console.log(rej)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) =>{\r\n    return (dispatch) =>{\r\n        profileAPI.getStatus(userId).then(data => {\r\n            dispatch(setUserStatus(data))\r\n            console.log(data)\r\n        }).catch(rej =>{\r\n            console.log(rej)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateStatus = (status) =>{\r\n    return (dispatch) =>{\r\n        profileAPI.updateStatus(status).then(data => {\r\n            dispatch(setUserStatus(data))\r\n        }).catch(rej =>{\r\n            console.log(rej)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default postCreatReducer"]},"metadata":{},"sourceType":"module"}