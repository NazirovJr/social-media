{"ast":null,"code":"import React from\"react\";import axios from\"axios\";var instance=axios.create({withCredentials:true,headers:{\"API-KEY\":\"cc5cac6b-721d-43fc-94a9-ffd0411ae4f8\"},baseURL:\"https://social-network.samuraijs.com/api/1.0/\"});export var usersAPI={getUsers:function getUsers(){var currentPage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var amountUser=arguments.length>1&&arguments[1]!==undefined?arguments[1]:7;return instance.get(\"users?page=\".concat(currentPage,\"&count=\").concat(amountUser)).then(function(res){return res.data;});},getProfile:function getProfile(userId){return instance.get(\"profile/\".concat(userId)).then(function(res){return res.data;});},unFollowUser:function unFollowUser(id){return instance.delete(\"follow/\".concat(id)).then(function(res){return res.data;});},followUser:function followUser(id){return instance.post(\"follow/\".concat(id)).then(function(res){return res.data;});}};export var profileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\".concat(userId)).then(function(res){return res.data;});},getStatus:function getStatus(userId){return instance.get(\"profile/status/\".concat(userId)).then(function(res){return res.data;});},updateStatus:function updateStatus(status){return instance.put(\"profile/status\",{status:status}).then(function(res){res.data.messages.join('');});}};export var authAPI={authUser:function authUser(){return instance.get(\"auth/me\").then(function(res){return res.data;});},loginUser:function loginUser(email,password){var rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return instance.post(\"auth/login\",{email:email,password:password,rememberMe:rememberMe}).then(function(res){return res.data;});},logoutUser:function logoutUser(){return instance.delete(\"auth/login\").then(function(res){return res.data;});}};","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/API/api.js"],"names":["React","axios","instance","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","amountUser","get","then","res","data","getProfile","userId","unFollowUser","id","delete","followUser","post","profileAPI","getStatus","updateStatus","status","put","messages","join","authAPI","authUser","loginUser","email","password","rememberMe","logoutUser"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    headers: {\r\n        \"API-KEY\": \"cc5cac6b-721d-43fc-94a9-ffd0411ae4f8\"\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n    }\r\n)\r\n\r\nexport const usersAPI = {\r\n    getUsers:(currentPage = 1, amountUser = 7) => {\r\n        return  instance.get(`users?page=${currentPage}&count=${amountUser}`).then(res => res.data)\r\n    },\r\n    getProfile:(userId) => {\r\n        return  instance.get(`profile/${userId}`).then(res => res.data)\r\n    },\r\n    unFollowUser:(id) => {\r\n        return instance.delete(`follow/${id}`).then(res => res.data)\r\n    },\r\n    followUser:(id) => {\r\n        return instance.post(`follow/${id}`).then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile:(userId) => {\r\n        return  instance.get(`profile/${userId}`).then(res => res.data)\r\n    },\r\n    getStatus:(userId) => {\r\n        return instance.get(`profile/status/${userId}`).then(res => {\r\n            return res.data\r\n        })\r\n    },\r\n    updateStatus:(status) =>{\r\n        return instance.put(`profile/status`,{status}).then(res => {\r\n            res.data.messages.join('')\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authUser:() => {\r\n        return  instance.get(`auth/me`).then(res => res.data)\r\n    },\r\n    loginUser:(email, password, rememberMe = false) => {\r\n        return  instance.post(`auth/login`,{email, password, rememberMe}).then(res => res.data)\r\n    },\r\n    logoutUser:() => {\r\n        return  instance.delete(`auth/login`).then(res => res.data)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}