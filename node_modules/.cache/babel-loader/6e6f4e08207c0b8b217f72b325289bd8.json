{"ast":null,"code":"import React from'react';import style from'./MyPost.module.css';import{reduxForm}from\"redux-form\";import{fieldCreator,Input,Textaria}from\"../../../FormControl/FormControl\";import{maxLengthCreator,required}from\"../../../../utilits/validator/Validator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength50=maxLengthCreator(50);var maxLength30=maxLengthCreator(30);function postForm(_ref){var handleSubmit=_ref.handleSubmit;return/*#__PURE__*/_jsxs(\"form\",{className:style.form,onSubmit:handleSubmit,children:[fieldCreator(\"title\",\"title\",Input,[required,maxLength30]),fieldCreator(\"text\",\"Input the post\",Textaria,[required,maxLength50]),fieldCreator(\"Img\",\"Img url\",Input,[]),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:style.btn,children:\"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"})]});}var PostFormRedux=reduxForm({form:\"posts\"})(postForm);var MyPost=/*#__PURE__*/React.memo(function(_ref2){var postsArr=_ref2.postsArr,addPost=_ref2.addPost;var arr_post=postsArr.map(function(el){return/*#__PURE__*/_jsxs(\"div\",{className:style.item,children:[/*#__PURE__*/_jsx(\"img\",{className:\"\".concat(style.logo),src:el.photo,alt:\"#\"}),/*#__PURE__*/_jsxs(\"div\",{className:style.text,children:[/*#__PURE__*/_jsx(\"span\",{children:el.title}),/*#__PURE__*/_jsx(\"p\",{children:el.text})]})]});});var onSubmit=function onSubmit(values){var arr=[values.title,values.text,values.url];addPost(arr);};return/*#__PURE__*/_jsxs(\"div\",{className:style.post,children:[/*#__PURE__*/_jsx(PostFormRedux,{onSubmit:onSubmit}),/*#__PURE__*/_jsx(\"div\",{className:style.posts,children:arr_post})]});});export default MyPost;","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/component/content/Profile/MyPost/MyPost.jsx"],"names":["React","style","reduxForm","fieldCreator","Input","Textaria","maxLengthCreator","required","maxLength50","maxLength30","postForm","handleSubmit","form","btn","PostFormRedux","MyPost","memo","postsArr","addPost","arr_post","map","el","item","logo","photo","text","title","onSubmit","values","arr","url","post","posts"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,OAAQC,SAAR,KAAwB,YAAxB,CACA,OAAQC,YAAR,CAAsBC,KAAtB,CAA6BC,QAA7B,KAA4C,kCAA5C,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,yCAAzC,C,wFACA,GAAMC,CAAAA,WAAW,CAAGF,gBAAgB,CAAC,EAAD,CAApC,CACA,GAAMG,CAAAA,WAAW,CAAGH,gBAAgB,CAAC,EAAD,CAApC,CACA,QAASI,CAAAA,QAAT,MAAkC,IAAfC,CAAAA,YAAe,MAAfA,YAAe,CAC9B,mBAAO,cAAM,SAAS,CAAEV,KAAK,CAACW,IAAvB,CAA6B,QAAQ,CAAED,YAAvC,WACFR,YAAY,CAAC,OAAD,CAAU,OAAV,CAAmBC,KAAnB,CAA0B,CAAEG,QAAF,CAAYE,WAAZ,CAA1B,CADV,CAEFN,YAAY,CAAC,MAAD,CAAS,gBAAT,CAA2BE,QAA3B,CAAqC,CAAEE,QAAF,CAAYC,WAAZ,CAArC,CAFV,CAGFL,YAAY,CAAC,KAAD,CAAQ,SAAR,CAAmBC,KAAnB,CAA0B,EAA1B,CAHV,cAIH,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAEH,KAAK,CAACY,GAAvC,sFAJG,GAAP,CAMH,CAED,GAAMC,CAAAA,aAAa,CAAGZ,SAAS,CAAC,CAACU,IAAI,CAAC,OAAN,CAAD,CAAT,CAA0BF,QAA1B,CAAtB,CAEA,GAAMK,CAAAA,MAAM,cAAGf,KAAK,CAACgB,IAAN,CAAW,eAAwB,IAAtBC,CAAAA,QAAsB,OAAtBA,QAAsB,CAAZC,OAAY,OAAZA,OAAY,CAE9C,GAAIC,CAAAA,QAAQ,CAAGF,QAAQ,CAACG,GAAT,CAAa,SAAAC,EAAE,qBAC1B,aAAK,SAAS,CAAEpB,KAAK,CAACqB,IAAtB,wBACI,YAAK,SAAS,WAAKrB,KAAK,CAACsB,IAAX,CAAd,CAAiC,GAAG,CAAEF,EAAE,CAACG,KAAzC,CAAgD,GAAG,CAAC,GAApD,EADJ,cAEI,aAAK,SAAS,CAAEvB,KAAK,CAACwB,IAAtB,wBACI,sBAAOJ,EAAE,CAACK,KAAV,EADJ,cAC2B,mBAAIL,EAAE,CAACI,IAAP,EAD3B,GAFJ,GAD0B,EAAf,CAAf,CASA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAY,CACzB,GAAIC,CAAAA,GAAG,CAAG,CAACD,MAAM,CAACF,KAAR,CAAcE,MAAM,CAACH,IAArB,CAA0BG,MAAM,CAACE,GAAjC,CAAV,CACAZ,OAAO,CAACW,GAAD,CAAP,CACH,CAHD,CAIA,mBACI,aAAK,SAAS,CAAE5B,KAAK,CAAC8B,IAAtB,wBACI,KAAC,aAAD,EAAe,QAAQ,CAAEJ,QAAzB,EADJ,cAEI,YAAK,SAAS,CAAE1B,KAAK,CAAC+B,KAAtB,UACKb,QADL,EAFJ,GADJ,CAQH,CAvBc,CAAf,CA2BA,cAAeJ,CAAAA,MAAf","sourcesContent":["import React from 'react'\r\nimport style from './MyPost.module.css'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {fieldCreator, Input, Textaria} from \"../../../FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../../utilits/validator/Validator\";\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst maxLength30 = maxLengthCreator(30)\r\nfunction postForm({handleSubmit}) {\r\n    return <form className={style.form} onSubmit={handleSubmit}>\r\n        {fieldCreator(\"title\", \"title\", Input, [ required, maxLength30 ])}\r\n        {fieldCreator(\"text\", \"Input the post\", Textaria, [ required, maxLength50 ])}\r\n        {fieldCreator(\"Img\", \"Img url\", Input, [])}\r\n        <button type=\"submit\" className={style.btn}>Опубликовать</button>\r\n    </form>;\r\n}\r\n\r\nconst PostFormRedux = reduxForm({form:\"posts\"})(postForm)\r\n\r\nconst MyPost = React.memo(({postsArr, addPost}) =>{\r\n\r\n    let arr_post = postsArr.map(el =>\r\n        <div className={style.item}>\r\n            <img className={`${style.logo}`} src={el.photo} alt=\"#\"/>\r\n            <div className={style.text}>\r\n                <span>{el.title}</span><p>{el.text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const onSubmit = (values) => {\r\n        let arr = [values.title,values.text,values.url]\r\n        addPost(arr)\r\n    }\r\n    return (\r\n        <div className={style.post}>\r\n            <PostFormRedux onSubmit={onSubmit}/>\r\n            <div className={style.posts}>\r\n                {arr_post}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default MyPost\r\n"]},"metadata":{},"sourceType":"module"}