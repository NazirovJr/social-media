{"ast":null,"code":"import { authAPI } from \"../API/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\nconst InitializeState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = InitializeState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUser = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const authUser = () => {\n  return async dispatch => {\n    const data = await authAPI.authUser();\n\n    if (data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = data.data;\n      dispatch(setUser(id, email, login, true));\n    }\n  };\n};\nexport const loginUser = (email, password, rememberMe) => {\n  return async dispatch => {\n    const data = await authAPI.loginUser(email, password, rememberMe);\n\n    if (data.resultCode === 0) {\n      dispatch(authUser());\n    } else {\n      const msgError = data.messages.length > 0 ? data.messages : \"Common Error\";\n      dispatch(stopSubmit(\"login\", {\n        _error: msgError\n      }));\n    }\n  };\n};\nexport const logoutUser = () => {\n  return async dispatch => {\n    const data = await authAPI.logoutUser();\n\n    if (data.resultCode === 0) {\n      dispatch(setUser(null, null, null, false));\n    }\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/Redux/authReducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","InitializeState","userId","email","login","isAuth","authReducer","state","action","type","payload","setUser","authUser","dispatch","data","resultCode","id","loginUser","password","rememberMe","msgError","messages","length","_error","logoutUser"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAG,oBAAtB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,KAAK,EAAE,IAFa;AAGpBC,EAAAA,KAAK,EAAE,IAHa;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAAxB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,eAAT,EAA0BO,MAA1B,KAAqC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMI,OAAO,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AACtDI,EAAAA,IAAI,EAAET,aADgD;AAEtDU,EAAAA,OAAO,EAAE;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AAF6C,CAAnC,CAAhB;AAKP,OAAO,MAAMO,QAAQ,GAAG,MAAM;AAC1B,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,IAAI,GAAG,MAAMhB,OAAO,CAACc,QAAR,EAAnB;;AACA,QAAIE,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACvB,UAAI;AAACC,QAAAA,EAAD;AAAKb,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,UAAqBU,IAAI,CAACA,IAA9B;AACAD,MAAAA,QAAQ,CAACF,OAAO,CAACK,EAAD,EAAKb,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAR,CAAR;AACH;AACJ,GAND;AAOH,CARM;AASP,OAAO,MAAMa,SAAS,GAAG,CAACd,KAAD,EAAQe,QAAR,EAAkBC,UAAlB,KAAiC;AACtD,SAAO,MAAON,QAAP,IAAoB;AACvB,UAAMC,IAAI,GAAG,MAAMhB,OAAO,CAACmB,SAAR,CAAkBd,KAAlB,EAAyBe,QAAzB,EAAmCC,UAAnC,CAAnB;;AACA,QAAIL,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACvBF,MAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACH,KAFD,MAEO;AACH,YAAMQ,QAAQ,GAAGN,IAAI,CAACO,QAAL,CAAcC,MAAd,GAAuB,CAAvB,GAA2BR,IAAI,CAACO,QAAhC,GAA2C,cAA5D;AACAR,MAAAA,QAAQ,CAACd,UAAU,CAAC,OAAD,EAAU;AAACwB,QAAAA,MAAM,EAAEH;AAAT,OAAV,CAAX,CAAR;AACH;AACJ,GARD;AASH,CAVM;AAWP,OAAO,MAAMI,UAAU,GAAG,MAAM;AAC5B,SAAO,MAAOX,QAAP,IAAoB;AACvB,UAAMC,IAAI,GAAG,MAAMhB,OAAO,CAAC0B,UAAR,EAAnB;;AACI,QAAIV,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACvBF,MAAAA,QAAQ,CAACF,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAR,CAAR;AACH;AACR,GALD;AAMH,CAPM;AAQP,eAAeL,WAAf","sourcesContent":["import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA'\r\n\r\nconst InitializeState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = InitializeState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUser = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const authUser = () => {\r\n    return async (dispatch) => {\r\n        const data = await authAPI.authUser()\r\n        if (data.resultCode === 0) {\r\n            let {id, email, login} = data.data\r\n            dispatch(setUser(id, email, login, true))\r\n        }\r\n    }\r\n}\r\nexport const loginUser = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        const data = await authAPI.loginUser(email, password, rememberMe)\r\n        if (data.resultCode === 0) {\r\n            dispatch(authUser())\r\n        } else {\r\n            const msgError = data.messages.length > 0 ? data.messages : \"Common Error\"\r\n            dispatch(stopSubmit(\"login\", {_error: msgError}))\r\n        }\r\n    }\r\n}\r\nexport const logoutUser = () => {\r\n    return async (dispatch) => {\r\n        const data = await authAPI.logoutUser()\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUser(null, null, null, false))\r\n            }\r\n    }\r\n}\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}