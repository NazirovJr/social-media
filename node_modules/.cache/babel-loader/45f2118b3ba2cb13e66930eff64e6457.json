{"ast":null,"code":"import { usersAPI } from \"../API/api\";\nconst FOLLOW = 'FOLLOW';\nconst UN_FOLLOW = 'UN-FOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS = 'SET-TOTAL-USERS';\nconst SET_LOADER = 'SET-LOADER';\nconst TOGGLE_FOLLOW_IN_PROGRESS = 'TOGGLE_FOLLOW-IN-PROGRESS';\nconst InitializeState = {\n  users: [],\n  currentPage: 1,\n  totalPage: 0,\n  amountUser: 20,\n  isFetching: true,\n  followInProgress: []\n};\n\nconst usersReducer = (state = InitializeState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(el => {\n          if (el.id === action.userId) {\n            return { ...el,\n              followed: true\n            };\n          }\n\n          return el;\n        })\n      };\n\n    case UN_FOLLOW:\n      return { ...state,\n        users: state.users.map(el => {\n          if (el.id === action.userId) {\n            return { ...el,\n              followed: false\n            };\n          }\n\n          return el;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.users]\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS:\n      return { ...state,\n        totalPage: action.amount\n      };\n\n    case SET_LOADER:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_FOLLOW_IN_PROGRESS:\n      return { ...state,\n        followInProgress: action.isFetching ? [...state.followInProgress, action.userId] : state.followInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unFollowSuccess = userId => ({\n  type: UN_FOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalPage = amount => ({\n  type: SET_TOTAL_USERS,\n  amount\n});\nexport const IsFetching = isFetching => ({\n  type: SET_LOADER,\n  isFetching\n});\n_c = IsFetching;\nexport const followIPAC = (isFetching, userId) => ({\n  type: TOGGLE_FOLLOW_IN_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (currentPage, amountUser) => {\n  return dispatch => {\n    dispatch(IsFetching(true));\n    usersAPI.getUsers(currentPage, amountUser).then(data => {\n      dispatch(IsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalPage(data.totalCount));\n    });\n  };\n};\nexport const follow = userId => {\n  return dispatch => {\n    dispatch(followIPAC(true, userId));\n    usersAPI.unFollowUser(userId).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(unFollowSuccess(userId));\n      }\n\n      dispatch(followIPAC(false, userId));\n    });\n  };\n};\nexport const unFollow = userId => {\n  return dispatch => {\n    dispatch(followIPAC(true, userId));\n    usersAPI.followUser(userId).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(followSuccess(userId));\n      }\n\n      dispatch(followIPAC(false, userId));\n    });\n  };\n};\nexport default usersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsFetching\");","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/Redux/usersReducer.js"],"names":["usersAPI","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS","SET_LOADER","TOGGLE_FOLLOW_IN_PROGRESS","InitializeState","users","currentPage","totalPage","amountUser","isFetching","followInProgress","usersReducer","state","action","type","map","el","id","userId","followed","amount","filter","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setTotalPage","IsFetching","followIPAC","requestUsers","dispatch","getUsers","then","data","items","totalCount","follow","unFollowUser","resultCode","unFollow","followUser"],"mappings":"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","sourcesContent":["\r\nimport { usersAPI} from \"../API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UN_FOLLOW = 'UN-FOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS = 'SET-TOTAL-USERS'\r\nconst SET_LOADER = 'SET-LOADER'\r\nconst TOGGLE_FOLLOW_IN_PROGRESS = 'TOGGLE_FOLLOW-IN-PROGRESS'\r\n\r\nconst InitializeState = {\r\n    users :[],\r\n    currentPage:1,\r\n    totalPage:0,\r\n    amountUser:20,\r\n    isFetching:true,\r\n    followInProgress:[],\r\n\r\n}\r\n\r\nconst usersReducer = (state=InitializeState,action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el.id === action.userId){\r\n                        return {...el,followed : true}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el.id === action.userId){\r\n                        return {...el,followed : false}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalPage: action.amount\r\n            }\r\n        case SET_LOADER:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOW_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching\r\n                    ? [...state.followInProgress,action.userId]\r\n                    : state.followInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type:FOLLOW,userId})\r\nexport const unFollowSuccess = (userId) =>({type:UN_FOLLOW,userId})\r\nexport const setUsers = (users) =>({type:SET_USERS,users})\r\nexport const setCurrentPage = (currentPage) =>({type:SET_CURRENT_PAGE,currentPage})\r\nexport const setTotalPage = (amount) =>({type:SET_TOTAL_USERS,amount})\r\nexport const IsFetching = (isFetching) =>({type:SET_LOADER,isFetching})\r\nexport const followIPAC = (isFetching, userId) =>({type:TOGGLE_FOLLOW_IN_PROGRESS,isFetching,userId})\r\n\r\n\r\nexport const requestUsers = (currentPage, amountUser) =>{\r\n    return (dispatch) =>\r\n    {\r\n        dispatch(IsFetching(true))\r\n        usersAPI.getUsers(currentPage, amountUser).then(data => {\r\n            dispatch(IsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalPage(data.totalCount))\r\n        })\r\n    }\r\n}\r\nexport const follow = (userId) =>{\r\n    return (dispatch) =>{\r\n        dispatch(followIPAC(true, userId))\r\n        usersAPI.unFollowUser(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0){\r\n                    dispatch(unFollowSuccess(userId))\r\n                }\r\n                dispatch(followIPAC(false, userId))\r\n            })\r\n    }\r\n}\r\nexport const unFollow = (userId) =>{\r\n    return (dispatch) =>{\r\n        dispatch(followIPAC(true, userId))\r\n        usersAPI.followUser(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0){\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(followIPAC(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}