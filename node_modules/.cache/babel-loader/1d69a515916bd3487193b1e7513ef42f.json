{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\React and JS\\\\scocial media\\\\my-app\\\\src\\\\utilits\\\\scroll\\\\NextPannel.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport style from './NextPannel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet NextPannel = ({\n  totalPage,\n  amountUser,\n  currentPage,\n  onPageChange,\n  partotationSize: partitionSize = 10\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let pageCount = Math.ceil(totalPage / amountUser);\n  let pages = [];\n\n  for (let i = 1; i < pageCount; i++) {\n    pages.push(i);\n  }\n\n  let partitionNumber, setPartitionNumber;\n  useEffect(_s(() => {\n    _s();\n\n    [partitionNumber, setPartitionNumber] = useState(1);\n  }, \"vpR6s6c+pWN9iYRRE4XhvQBqRwA=\"));\n  let partitionCount = pageCount / partitionSize;\n  let leftEdgePartition = (partitionNumber - 1) * partitionSize - 1;\n  let rightPartition = partitionNumber * partitionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.pages,\n    children: [partitionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPartitionNumber(partitionNumber - 1),\n      children: \"last\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }, this), pages.filter(el => el >= leftEdgePartition && el <= rightPartition).map(el => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === el && style.activePage,\n        onClick: e => {\n          onPageChange(el);\n        },\n        children: el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }, this);\n    }), partitionCount > partitionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPartitionNumber(partitionNumber + 1),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(NextPannel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = NextPannel;\nexport default NextPannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextPannel\");","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/utilits/scroll/NextPannel.js"],"names":["React","useEffect","useState","style","NextPannel","totalPage","amountUser","currentPage","onPageChange","partotationSize","partitionSize","pageCount","Math","ceil","pages","i","push","partitionNumber","setPartitionNumber","partitionCount","leftEdgePartition","rightPartition","filter","el","map","activePage","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAmB,yBAAnB;;;AACA,IAAIC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA,YAArC;AAAmDC,EAAAA,eAAe,EAAEC,aAAa,GAAG;AAApF,CAAD,KAA6F;AAAA;;AAAA;;AAE1G,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUR,SAAS,GAAGC,UAAtB,CAAhB;AACA,MAAIQ,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,EAAhC,EAAoC;AAChCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,eAAJ,EAAqBC,kBAArB;AACAjB,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZ,KAACgB,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,CAAD,CAAhD;AACH,GAFQ,kCAAT;AAGA,MAAIiB,cAAc,GAAIR,SAAS,GAAGD,aAAlC;AACA,MAAIU,iBAAiB,GAAG,CAACH,eAAe,GAAG,CAAnB,IAAwBP,aAAxB,GAAwC,CAAhE;AACA,MAAIW,cAAc,GAAGJ,eAAe,GAAGP,aAAvC;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEP,KAAK,CAACW,KAAtB;AAAA,eACFG,eAAe,GAAG,CAAlB,iBAAuB;AAAQ,MAAA,OAAO,EAAE,MAAMC,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrB,EAIKH,KAAK,CACAQ,MADL,CACYC,EAAE,IAAIA,EAAE,IAAIH,iBAAN,IAA2BG,EAAE,IAAIF,cADnD,EAEKG,GAFL,CAESD,EAAE,IAAI;AACX,0BAAO;AACH,QAAA,SAAS,EAAEhB,WAAW,KAAKgB,EAAhB,IAAsBpB,KAAK,CAACsB,UADpC;AAEH,QAAA,OAAO,EAAGC,CAAD,IAAO;AACZlB,UAAAA,YAAY,CAACe,EAAD,CAAZ;AACH,SAJE;AAAA,kBAICA;AAJD;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KARD,CAJL,EAeFJ,cAAc,GAAGF,eAAjB,iBAAoC;AAAQ,MAAA,OAAO,EAAE,MAAMC,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAflC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBH,CAjCD;;IAAIb,U;;KAAAA,U;AAmCJ,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport style from  './NextPannel.module.css'\r\nlet NextPannel = ({totalPage, amountUser, currentPage, onPageChange, partotationSize: partitionSize = 10}) => {\r\n\r\n    let pageCount = Math.ceil(totalPage / amountUser)\r\n    let pages = []\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let partitionNumber, setPartitionNumber\r\n    useEffect(() => {\r\n        [partitionNumber, setPartitionNumber] = useState(1)\r\n    })\r\n    let partitionCount = (pageCount / partitionSize)\r\n    let leftEdgePartition = (partitionNumber - 1) * partitionSize - 1\r\n    let rightPartition = partitionNumber * partitionSize\r\n\r\n    return <div className={style.pages}>\r\n        {partitionNumber > 1 && <button onClick={() => setPartitionNumber(partitionNumber - 1)}>last</button>}\r\n\r\n            {\r\n                pages\r\n                    .filter(el => el >= leftEdgePartition && el <= rightPartition)\r\n                    .map(el => {\r\n                    return <span\r\n                        className={currentPage === el && style.activePage}\r\n                        onClick={(e) => {\r\n                            onPageChange(el)\r\n                        }}>{el}</span>\r\n                })\r\n            }\r\n\r\n        {partitionCount > partitionNumber && <button onClick={() => setPartitionNumber(partitionNumber + 1)}>Next</button>}\r\n\r\n    </div>\r\n}\r\n\r\nexport default NextPannel\r\n\r\n"]},"metadata":{},"sourceType":"module"}