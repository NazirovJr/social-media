{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"cc5cac6b-721d-43fc-94a9-ffd0411ae4f8\"\n  },\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`\n});\nexport const usersAPI = {\n  getUsers: (currentPage = 1, amountUser = 7) => {\n    return instance.get(`users?page=${currentPage}&count=${amountUser}`).then(res => res.data);\n  },\n  getProfile: userId => {\n    return instance.get(`profile/${userId}`).then(res => res.data);\n  },\n  unFollowUser: id => {\n    return instance.delete(`follow/${id}`).then(res => res.data);\n  },\n  followUser: id => {\n    return instance.post(`follow/${id}`).then(res => res.data);\n  }\n};\nexport const profileAPI = {\n  getProfile: userId => {\n    return instance.get(`profile/${userId}`).then(res => res.data);\n  },\n  getStatus: userId => {\n    return instance.get(`profile/status/${userId}`).then(res => {\n      debugger;\n      return res.statusText;\n    });\n  },\n  updateStatus: status => {\n    return instance.put(`profile/status`, {\n      status\n    }).then(res => {\n      res.data.messages.join('');\n    });\n  }\n};\nexport const authAPI = {\n  authUser: () => {\n    return instance.get(`auth/me`).then(res => res.data);\n  },\n  loginUser: (email, password, rememberMe = false) => {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    }).then(res => res.data);\n  },\n  logoutUser: () => {\n    return instance.delete(`auth/login`).then(res => res.data);\n  }\n};","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/API/api.js"],"names":["React","axios","instance","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","amountUser","get","then","res","data","getProfile","userId","unFollowUser","id","delete","followUser","post","profileAPI","getStatus","statusText","updateStatus","status","put","messages","join","authAPI","authUser","loginUser","email","password","rememberMe","logoutUser"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    headers: {\r\n        \"API-KEY\": \"cc5cac6b-721d-43fc-94a9-ffd0411ae4f8\"\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n    }\r\n)\r\n\r\nexport const usersAPI = {\r\n    getUsers:(currentPage = 1, amountUser = 7) => {\r\n        return  instance.get(`users?page=${currentPage}&count=${amountUser}`).then(res => res.data)\r\n    },\r\n    getProfile:(userId) => {\r\n        return  instance.get(`profile/${userId}`).then(res => res.data)\r\n    },\r\n    unFollowUser:(id) => {\r\n        return instance.delete(`follow/${id}`).then(res => res.data)\r\n    },\r\n    followUser:(id) => {\r\n        return instance.post(`follow/${id}`).then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile:(userId) => {\r\n        return  instance.get(`profile/${userId}`).then(res => res.data)\r\n    },\r\n    getStatus:(userId) => {\r\n        return instance.get(`profile/status/${userId}`).then(res => {\r\n            debugger\r\n            return res.statusText\r\n        })\r\n    },\r\n    updateStatus:(status) =>{\r\n        return instance.put(`profile/status`,{status}).then(res => {\r\n            res.data.messages.join('')\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authUser:() => {\r\n        return  instance.get(`auth/me`).then(res => res.data)\r\n    },\r\n    loginUser:(email, password, rememberMe = false) => {\r\n        return  instance.post(`auth/login`,{email, password, rememberMe}).then(res => res.data)\r\n    },\r\n    logoutUser:() => {\r\n        return  instance.delete(`auth/login`).then(res => res.data)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}