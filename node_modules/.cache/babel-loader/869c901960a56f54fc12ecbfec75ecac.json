{"ast":null,"code":"import React from\"react\";import{reduxForm}from\"redux-form\";import{fieldCreator,Input}from\"../FormControl/FormControl\";import{maxLengthCreator,required}from\"../../utilits/validator/Validator\";import{connect}from\"react-redux\";import{loginUser}from\"../../Redux/authReducer\";import{Redirect}from\"react-router-dom\";import styles from\"../FormControl/FormControl.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength50=maxLengthCreator(50);var LogInForm=function LogInForm(props){return/*#__PURE__*/_jsx(\"form\",{onSubmit:props.handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginForm\",children:[props.error?/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:/*#__PURE__*/_jsx(\"span\",{children:props.error})}):\"\",fieldCreator(\"email\",\"email\",Input,[required,maxLength50]),fieldCreator(\"password\",\"password\",Input,[required,maxLength50],{type:\"password\"}),fieldCreator(\"rememberMe\",\"\",Input,[],{type:\"checkbox\"},\"Remember me\"),/*#__PURE__*/_jsx(\"div\",{className:\"loginForm__button\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Submit\"})})]})});};var LogInFormRedux=reduxForm({form:\"login\"})(LogInForm);var LogIn=function LogIn(props){var onSubmit=function onSubmit(formData){props.loginUser(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"LogIn\"}),/*#__PURE__*/_jsx(LogInFormRedux,{onSubmit:onSubmit})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{loginUser:loginUser})(LogIn);","map":{"version":3,"sources":["G:/projects/React and JS/scocial media/my-app/src/component/LogIn/LogIn.jsx"],"names":["React","reduxForm","fieldCreator","Input","maxLengthCreator","required","connect","loginUser","Redirect","styles","maxLength50","LogInForm","props","handleSubmit","error","type","LogInFormRedux","form","LogIn","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,KAAwB,YAAxB,CACA,OAAQC,YAAR,CAAsBC,KAAtB,KAAkC,4BAAlC,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,mCAAzC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,SAAR,KAAwB,yBAAxB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uCAAnB,C,wFACA,GAAMC,CAAAA,WAAW,CAAGN,gBAAgB,CAAC,EAAD,CAApC,CACA,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,mBAAO,aAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,uBACP,aAAK,SAAS,CAAC,WAAf,WACKD,KAAK,CAACE,KAAN,cACD,YAAK,SAAS,CAAEL,MAAM,CAACK,KAAvB,uBACI,sBAAOF,KAAK,CAACE,KAAb,EADJ,EADC,CAGQ,EAJb,CAKKZ,YAAY,CAAC,OAAD,CAAU,OAAV,CAAmBC,KAAnB,CAA0B,CAACE,QAAD,CAAWK,WAAX,CAA1B,CALjB,CAMKR,YAAY,CAAC,UAAD,CAAa,UAAb,CAAyBC,KAAzB,CAAgC,CAACE,QAAD,CAAWK,WAAX,CAAhC,CAAyD,CAACK,IAAI,CAAC,UAAN,CAAzD,CANjB,CAOKb,YAAY,CAAC,YAAD,CAAe,EAAf,CAAmBC,KAAnB,CAA0B,EAA1B,CAA8B,CAACY,IAAI,CAAC,UAAN,CAA9B,CAAiD,aAAjD,CAPjB,cAQI,YAAK,SAAS,CAAC,mBAAf,uBACI,kCADJ,EARJ,GADO,EAAP,CAcH,CAfD,CAiBA,GAAMC,CAAAA,cAAc,CAAGf,SAAS,CAAC,CAACgB,IAAI,CAAC,OAAN,CAAD,CAAT,CAA0BN,SAA1B,CAAvB,CAEA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACN,KAAD,CAAW,CACrB,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BR,KAAK,CAACL,SAAN,CAAgBa,QAAQ,CAACC,KAAzB,CAAgCD,QAAQ,CAACE,QAAzC,CAAmDF,QAAQ,CAACG,UAA5D,EACH,CAFD,CAIA,GAAIX,KAAK,CAACY,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBAAO,oCACH,6BADG,cAEH,KAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFG,GAAP,CAIH,CAbD,CAcA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAACE,KAAK,CAACC,IAAN,CAAWH,MADc,CAAZ,EAAxB,CAGA,cAAelB,CAAAA,OAAO,CAACmB,eAAD,CAAmB,CAAClB,SAAS,CAATA,SAAD,CAAnB,CAAP,CAAuCW,KAAvC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {fieldCreator, Input} from \"../FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validator/Validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../FormControl/FormControl.module.css\"\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst LogInForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n    <div className=\"loginForm\">\r\n        {props.error ?\r\n        <div className={styles.error}>\r\n            <span>{props.error}</span>\r\n        </div> : \"\"}\r\n        {fieldCreator(\"email\", \"email\", Input, [required, maxLength50])}\r\n        {fieldCreator(\"password\", \"password\", Input, [required, maxLength50], {type:\"password\"})}\r\n        {fieldCreator(\"rememberMe\", \"\", Input, [], {type:\"checkbox\"}, \"Remember me\")}\r\n        <div className=\"loginForm__button\">\r\n            <button>Submit</button>\r\n        </div>\r\n    </div>\r\n    </form>\r\n}\r\n\r\nconst LogInFormRedux = reduxForm({form:\"login\"})(LogInForm)\r\n\r\nconst LogIn = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginUser(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LogIn</h1>\r\n        <LogInFormRedux onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps  ,{loginUser})(LogIn)"]},"metadata":{},"sourceType":"module"}