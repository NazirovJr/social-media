{"version":3,"sources":["component/FormControl/FormControl.module.css","component/FormControl/FormControl.js","utilits/validator/Validator.js","component/LogIn/LogIn.jsx"],"names":["module","exports","FieldCreator","input","meta","props","element","hasError","touched","error","className","styles","formControl","children","Textaria","restProps","Input","fieldCreator","name","placeholder","component","validate","prop","text","required","values","maxLengthCreator","maxLength","length","maxLength50","LogInFormRedux","reduxForm","form","onSubmit","handleSubmit","type","connect","state","isAuth","auth","loginUser","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,oMCGnEC,EAAe,SAAC,GAAqC,EAApCC,MAAqC,IAA9BC,EAA6B,EAA7BA,KAAkBC,GAAW,EAAvBC,QAAuB,2CACjDC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACI,sBAAKC,UAAWC,IAAOC,YAAvB,UACI,8BACKP,EAAMQ,WAEVN,GAAY,+BAAOH,EAAKK,YAKxBK,EAAW,SAACT,GAAW,IACzBF,EAAsCE,EAAtCF,MAAyBY,GAAaV,EAA/BD,KAA+BC,EAAzBC,QADW,YACcD,EADd,6BAE/B,OAAO,cAACH,EAAD,2BAAkBG,GAAlB,aAAyB,oDAAcF,GAAWY,QAGhDC,EAAQ,SAACX,GAAW,IACtBF,EAAsCE,EAAtCF,MAAyBY,GAAaV,EAA/BD,KAA+BC,EAAzBC,QADQ,YACiBD,EADjB,6BAE5B,OAAO,cAACH,EAAD,2BAAkBG,GAAlB,aAAyB,iDAAWF,GAAWY,QAG7CE,EAAe,SAACC,EAAMC,EAAaC,EAAWC,GAAoC,IAA1BC,EAAyB,uDAAlB,GAAIC,EAAc,uDAAP,GACnF,OAAO,sBAAKb,UAAU,mBAAf,UACH,cAAC,IAAD,yBAAOQ,KAAMA,EAAMC,YAAaA,GAAiBG,GAAjD,IAAuDF,UAAWA,EAC3DC,SAAUA,KAFd,IAE2BE,O,iCC7BtC,6EAEaC,EAAW,SAACC,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAOG,OAASD,EAAW,MAAM,0BAAN,OAAiCA,M,iCCRpE,2FAQME,EAAcH,YAAiB,IAkB/BI,EAAiBC,YAAU,CAACC,KAAK,SAAhBD,EAjBL,SAAC1B,GACf,OAAO,sBAAM4B,SAAU5B,EAAM6B,aAAtB,SACP,sBAAKxB,UAAU,YAAf,UACKL,EAAMI,MACP,qBAAKC,UAAWC,IAAOF,MAAvB,SACI,+BAAOJ,EAAMI,UACR,GACRQ,YAAa,QAAS,QAASD,IAAO,CAACQ,IAAUK,IACjDZ,YAAa,WAAY,WAAYD,IAAO,CAACQ,IAAUK,GAAc,CAACM,KAAK,aAC3ElB,YAAa,aAAc,GAAID,IAAO,GAAI,CAACmB,KAAK,YAAa,eAC9D,qBAAKzB,UAAU,oBAAf,SACI,sDAyBG0B,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAOD,EAAME,KAAKD,UAEmB,CAACE,eAA3BJ,EAjBD,SAAC/B,GAKX,OAAIA,EAAMiC,OACC,cAAC,IAAD,CAAUG,GAAI,aAGlB,gCACH,uCACA,cAACX,EAAD,CAAgBG,SAVH,SAACS,GACdrC,EAAMmC,UAAUE,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.eab2c272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1ZgPw\",\"error\":\"FormControl_error__2aFBT\"};","import React from \"react\";\r\nimport styles from './FormControl.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FieldCreator = ({input, meta, element, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textaria = (props) => {\r\n    const {input, meta, element, ...restProps} = props\r\n    return <FieldCreator {...props}><textarea {...input} {...restProps} /></FieldCreator>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, element, ...restProps} = props\r\n    return <FieldCreator {...props}><input {...input} {...restProps} /></FieldCreator>\r\n}\r\n\r\nexport const fieldCreator = (name, placeholder, component, validate, prop = {}, text = \"\") => {\r\n    return <div className=\"loginForm__input\">\r\n        <Field name={name} placeholder={placeholder} {...prop} component={component}\r\n               validate={validate}/> {text}\r\n    </div>\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport const required = (values) => {\r\n    if (values) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (values) => {\r\n    if (values.length > maxLength) return `Max length is equal to ${maxLength}`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {fieldCreator, Input} from \"../FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validator/Validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../FormControl/FormControl.module.css\"\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst LogInForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n    <div className=\"loginForm\">\r\n        {props.error ?\r\n        <div className={styles.error}>\r\n            <span>{props.error}</span>\r\n        </div> : \"\"}\r\n        {fieldCreator(\"email\", \"email\", Input, [required, maxLength50])}\r\n        {fieldCreator(\"password\", \"password\", Input, [required, maxLength50], {type:\"password\"})}\r\n        {fieldCreator(\"rememberMe\", \"\", Input, [], {type:\"checkbox\"}, \"Remember me\")}\r\n        <div className=\"loginForm__button\">\r\n            <button>Submit</button>\r\n        </div>\r\n    </div>\r\n    </form>\r\n}\r\n\r\nconst LogInFormRedux = reduxForm({form:\"login\"})(LogInForm)\r\n\r\nconst LogIn = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginUser(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LogIn</h1>\r\n        <LogInFormRedux onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps  ,{loginUser})(LogIn)"],"sourceRoot":""}